@using Pine.Data.Identity;
@using Pine.Models.Entities;
@model Tuple<PostsViewModel, User, ShopListingsViewModel>

@{
    ViewData["Title"] = Model.Item2.UserName;
}

<center><h1 style="color:#00ff21">@Html.DisplayFor(model => model.Item2.UserName)</h1></center>
<h2 style="color:aqua">Posts:</h2>
@if (Model.Item1.posts.Count == 0)
{
    <p style="color: #00ff21; display: inline">@Html.DisplayFor(model => model.Item2.UserName)  </p><p style="display: inline">has no posts.</p>
}
else
{
    <div>
        <div class="transbox">
            @foreach (var post in Model.Item1.posts.Where(p => p.userName == Model.Item2.UserName))
            {
                <partial name="../Community/PostCard.cshtml" model=@post />
            }
        </div>
    </div>
}

<h2 style="color:aqua">Listings:</h2>
@if (Model.Item3.listings.Count == 0)
{
    <p style="color: #00ff21; display: inline">@Html.DisplayFor(model => model.Item2.UserName) </p><p style="display: inline">has no active listings at the moment.</p>
}
else
{
    <div>
        <div class="transbox">
            @foreach (var listing in Model.Item3.listings.Where(l => l.userName == Model.Item2.UserName))
            {
                <partial name="../Shop/ListingCard.cshtml" model=@listing />
            }
        </div>
    </div>
}